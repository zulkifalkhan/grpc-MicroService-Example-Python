# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import RecordService_pb2 as RecordService__pb2


class RecordServiceStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
                '/RecordService.RecordService/SayHello',
                request_serializer=RecordService__pb2.HelloRequest.SerializeToString,
                response_deserializer=RecordService__pb2.HelloReply.FromString,
                )
        self.SayHelloAgain = channel.unary_unary(
                '/RecordService.RecordService/SayHelloAgain',
                request_serializer=RecordService__pb2.HelloRequest.SerializeToString,
                response_deserializer=RecordService__pb2.HelloReply.FromString,
                )
        self.makeAppointment = channel.unary_unary(
                '/RecordService.RecordService/makeAppointment',
                request_serializer=RecordService__pb2.MKAppRequest.SerializeToString,
                response_deserializer=RecordService__pb2.MKAppResponse.FromString,
                )
        self.getAppointment = channel.unary_unary(
                '/RecordService.RecordService/getAppointment',
                request_serializer=RecordService__pb2.getApp.SerializeToString,
                response_deserializer=RecordService__pb2.getAppReply.FromString,
                )
        self.CompleteAppointment = channel.unary_unary(
                '/RecordService.RecordService/CompleteAppointment',
                request_serializer=RecordService__pb2.CompleteApp.SerializeToString,
                response_deserializer=RecordService__pb2.CompleteAppReply.FromString,
                )


class RecordServiceServicer(object):
    """The greeting service definition.
    """

    def SayHello(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloAgain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def makeAppointment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAppointment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteAppointment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RecordServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHello,
                    request_deserializer=RecordService__pb2.HelloRequest.FromString,
                    response_serializer=RecordService__pb2.HelloReply.SerializeToString,
            ),
            'SayHelloAgain': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHelloAgain,
                    request_deserializer=RecordService__pb2.HelloRequest.FromString,
                    response_serializer=RecordService__pb2.HelloReply.SerializeToString,
            ),
            'makeAppointment': grpc.unary_unary_rpc_method_handler(
                    servicer.makeAppointment,
                    request_deserializer=RecordService__pb2.MKAppRequest.FromString,
                    response_serializer=RecordService__pb2.MKAppResponse.SerializeToString,
            ),
            'getAppointment': grpc.unary_unary_rpc_method_handler(
                    servicer.getAppointment,
                    request_deserializer=RecordService__pb2.getApp.FromString,
                    response_serializer=RecordService__pb2.getAppReply.SerializeToString,
            ),
            'CompleteAppointment': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteAppointment,
                    request_deserializer=RecordService__pb2.CompleteApp.FromString,
                    response_serializer=RecordService__pb2.CompleteAppReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RecordService.RecordService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RecordService(object):
    """The greeting service definition.
    """

    @staticmethod
    def SayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RecordService.RecordService/SayHello',
            RecordService__pb2.HelloRequest.SerializeToString,
            RecordService__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloAgain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RecordService.RecordService/SayHelloAgain',
            RecordService__pb2.HelloRequest.SerializeToString,
            RecordService__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def makeAppointment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RecordService.RecordService/makeAppointment',
            RecordService__pb2.MKAppRequest.SerializeToString,
            RecordService__pb2.MKAppResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAppointment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RecordService.RecordService/getAppointment',
            RecordService__pb2.getApp.SerializeToString,
            RecordService__pb2.getAppReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompleteAppointment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RecordService.RecordService/CompleteAppointment',
            RecordService__pb2.CompleteApp.SerializeToString,
            RecordService__pb2.CompleteAppReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
